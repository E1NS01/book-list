services:
  postgres:
    container_name: book_list_db
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: book_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: book_list_backend
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/book_db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./packages:/app/packages
      - backend_node_modules:/app/node_modules
      - backend_app_node_modules:/app/apps/backend/node_modules
    command: yarn workspace backend start:dev

  frontend:
    container_name: book_list_frontend
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile.dev
    ports:
      - "1234:1234"
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3000
      HOST: "0.0.0.0"
      PORT: 1234
    depends_on:
      - backend
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - ./packages:/app/packages
      - frontend_node_modules:/app/node_modules
      - frontend_app_node_modules:/app/apps/frontend/node_modules
    command: yarn workspace frontend dev

volumes:
  postgres_dev_data:
  backend_node_modules:
  backend_app_node_modules:
  frontend_node_modules:
  frontend_app_node_modules:
